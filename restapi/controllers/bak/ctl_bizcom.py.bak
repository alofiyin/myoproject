#_*_coding:utf-8_*_
import falcon
from cls_base import cache_get,cache_set,get_cnf_val
import gzip,json,time
from pprint import pprint
import biz_com
import sconf
from hashlib import md5
from utils import JSONEncoder
import logging

class ctl_bizcom:
	def __init__(self):
		pass
	def on_post(self,req,resp,action):
		result 		= [-101,"action %s not found."% action ]
		kw 			= req.context['doc']
		biznum 		= kw.get('biznum','')
		#传入参数
		prama 		= kw.get("prama",{})
		
		#业务配置
		bizcnf 		= get_cnf_val(biznum,sconf.BIZ)
		if not bizcnf:
			sconf.err_handle.biznum_not_config
			raise falcon.HTTPError(falcon.HTTP_701,
                                   sconf.err_handle.biznum_not_config[1],
									)
		kw['bizcnf']= bizcnf
		hexcod		= md5(json.dumps(prama).encode()).hexdigest()
		cachkey		= "%s.$s" %(biznum,hexcod)
		ttl			= bizcnf['prama']['ttl']
		#执行action
		if action == 'gettags':
			'''取得标签列表-从缓存取'''				
			tag_id 	= str(prama.get('tag_id',bizcnf['prama']['tag_id']))		
			lv2rows = prama.get('lv2rows',bizcnf['prama']['lv2rows'])
			lv3rows = prama.get('lv3rows',bizcnf['prama']['lv3rows'])
			result 	= cache_get(cachkey)
			if result:
				result = 0,json.loads(result)			
			else:
				result = biz_com.gettags(kw)
				if result[0] == 0 and result[1]:
					cache_set(ckey,json.dumps(result[1]),ttl)	
		
		elif action == 'list':
			'''根据标签取公司数据'''
			result = cache_get(cachkey)
			if result:
				return 0,json.loads(result)
			else:
				result = biz_com.list(kw)
				if result[0] == 0 and result[1]:
					cache_set(cachkey,json.dumps(res[1]),ttl)	

		#返回结果
		resp.body = JSONEncoder().encode(result)
	def on_get(self,req,resp,action):
		result = [-108,"action %s not found."% action ]
		#kw = req.context['doc']
		kw = {"biznum":"com.corp_targ","prama":{"tag_id":101,"lv2rows":13,"lv3rows":1}}
		biznum = kw.get('biznum','')
		bizcnf = get_cnf_val(biznum,sconf.BIZ)
		if not bizcnf:
			sconf.err_handle.biznum_not_config
			raise falcon.HTTPError(falcon.HTTP_701,
                                   sconf.err_handle.biznum_not_config[1],
									)
		kw['bizcnf'] = bizcnf
		if action == 'gettags':
			result = gettagsAction(kw)
			logger.info("t:%s bodylen:%s" %(req.date,len(str(result))))
		resp.body = JSONEncoder().encode(result)
